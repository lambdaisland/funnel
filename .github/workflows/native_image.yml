name: native_image
on:
  push:
    branches:
      - main
    tags:
      - '*'

env:
  CLOJURE_CLI_VERSION: '1.10.3.943'
  GRAALVM_VERSION: '19.3.1.java11'
  PROJECT: funnel

jobs:
  native-image:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            suffix: linux-amd64
          - os: macOS-latest
            suffix: darwin-amd64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '25'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: DeLaGuardo/setup-clojure@3.5
        with:
          tools-deps: ${{ env.CLOJURE_CLI_VERSION }}
      - name: Build native image
        run: |
          gu install native-image
          make all
          ls -l ./funnel
      - name: Rename
        run: mv ${{ env.PROJECT }} ${{ env.PROJECT }}.${{ matrix.suffix }}
      - uses: actions/upload-artifact@master
        with:
          name: ${{ env.PROJECT }}.${{ matrix.suffix }}
          path: ./${{ env.PROJECT }}.${{ matrix.suffix }}

  create-release:
    needs: [native-image]
    if: contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: DeLaGuardo/setup-clojure@3.5
        with:
          tools-deps: ${{ env.CLOJURE_CLI_VERSION }}

      - name: Setup Babashka
        uses: turtlequeue/setup-babashka@v1.3.0
        with:
          babashka-version: 0.6.2

      - name: Get release notes
        id: get-release-notes
        run: |
          bin/proj gh_actions_changelog_output

      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.get-release-notes.outputs.changelog }}
          prerelease: true

      - uses: actions/download-artifact@master
        with:
          name: ${{ env.PROJECT }}.linux-amd64
          path: tmp

      - uses: actions/upload-release-asset@v1
        id: upload-linux-release-asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tmp/${{ env.PROJECT }}.linux-amd64
          asset_name: ${{ env.PROJECT }}.linux-amd64
          asset_content_type: application/octet-stream

      - uses: actions/download-artifact@master
        with:
          name: ${{ env.PROJECT }}.darwin-amd64
          path: tmp

      - uses: actions/upload-release-asset@v1
        id: upload-darwin-release-asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tmp/${{ env.PROJECT }}.darwin-amd64
          asset_name: ${{ env.PROJECT }}.darwin-amd64
          asset_content_type: application/octet-stream
